// Code generated by protoc-gen-go. DO NOT EDIT.
// source: components/sync/protocol/web_app_specifics.proto

package sync_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WebAppIconInfo_Purpose int32

const (
	WebAppIconInfo_UNSPECIFIED WebAppIconInfo_Purpose = 0
	// Suitable for any purpose.
	WebAppIconInfo_ANY WebAppIconInfo_Purpose = 1
	// Designed for masking.
	WebAppIconInfo_MASKABLE WebAppIconInfo_Purpose = 2
	// Suitable for monochrome purposes.
	WebAppIconInfo_MONOCHROME WebAppIconInfo_Purpose = 3
)

var WebAppIconInfo_Purpose_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "ANY",
	2: "MASKABLE",
	3: "MONOCHROME",
}
var WebAppIconInfo_Purpose_value = map[string]int32{
	"UNSPECIFIED": 0,
	"ANY":         1,
	"MASKABLE":    2,
	"MONOCHROME":  3,
}

func (x WebAppIconInfo_Purpose) Enum() *WebAppIconInfo_Purpose {
	p := new(WebAppIconInfo_Purpose)
	*p = x
	return p
}
func (x WebAppIconInfo_Purpose) String() string {
	return proto.EnumName(WebAppIconInfo_Purpose_name, int32(x))
}
func (x *WebAppIconInfo_Purpose) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(WebAppIconInfo_Purpose_value, data, "WebAppIconInfo_Purpose")
	if err != nil {
		return err
	}
	*x = WebAppIconInfo_Purpose(value)
	return nil
}
func (WebAppIconInfo_Purpose) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_web_app_specifics_9ebf2fc6b24d2846, []int{0, 0}
}

// This enum should be a subset of the DisplayMode enum in
// chrome/browser/web_applications/proto/web_app.proto and
// third_party/blink/public/mojom/manifest/display_mode.mojom
type WebAppSpecifics_UserDisplayMode int32

const (
	WebAppSpecifics_UNSPECIFIED WebAppSpecifics_UserDisplayMode = 0
	WebAppSpecifics_BROWSER     WebAppSpecifics_UserDisplayMode = 1
	// MINIMAL_UI is never serialized.
	WebAppSpecifics_STANDALONE WebAppSpecifics_UserDisplayMode = 3
)

var WebAppSpecifics_UserDisplayMode_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "BROWSER",
	3: "STANDALONE",
}
var WebAppSpecifics_UserDisplayMode_value = map[string]int32{
	"UNSPECIFIED": 0,
	"BROWSER":     1,
	"STANDALONE":  3,
}

func (x WebAppSpecifics_UserDisplayMode) Enum() *WebAppSpecifics_UserDisplayMode {
	p := new(WebAppSpecifics_UserDisplayMode)
	*p = x
	return p
}
func (x WebAppSpecifics_UserDisplayMode) String() string {
	return proto.EnumName(WebAppSpecifics_UserDisplayMode_name, int32(x))
}
func (x *WebAppSpecifics_UserDisplayMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(WebAppSpecifics_UserDisplayMode_value, data, "WebAppSpecifics_UserDisplayMode")
	if err != nil {
		return err
	}
	*x = WebAppSpecifics_UserDisplayMode(value)
	return nil
}
func (WebAppSpecifics_UserDisplayMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_web_app_specifics_9ebf2fc6b24d2846, []int{1, 0}
}

// Sync & local data: Information about web app icon.
type WebAppIconInfo struct {
	// The size of the square app icon, in raw pixels.
	SizeInPx *int32 `protobuf:"varint,1,opt,name=size_in_px,json=sizeInPx" json:"size_in_px,omitempty"`
	// The URL of the app icon.
	Url *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	// The purpose or context in which the icon should be used.
	Purpose              *WebAppIconInfo_Purpose `protobuf:"varint,3,opt,name=purpose,enum=sync_pb.WebAppIconInfo_Purpose" json:"purpose,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WebAppIconInfo) Reset()         { *m = WebAppIconInfo{} }
func (m *WebAppIconInfo) String() string { return proto.CompactTextString(m) }
func (*WebAppIconInfo) ProtoMessage()    {}
func (*WebAppIconInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_app_specifics_9ebf2fc6b24d2846, []int{0}
}
func (m *WebAppIconInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebAppIconInfo.Unmarshal(m, b)
}
func (m *WebAppIconInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebAppIconInfo.Marshal(b, m, deterministic)
}
func (dst *WebAppIconInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebAppIconInfo.Merge(dst, src)
}
func (m *WebAppIconInfo) XXX_Size() int {
	return xxx_messageInfo_WebAppIconInfo.Size(m)
}
func (m *WebAppIconInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WebAppIconInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WebAppIconInfo proto.InternalMessageInfo

func (m *WebAppIconInfo) GetSizeInPx() int32 {
	if m != nil && m.SizeInPx != nil {
		return *m.SizeInPx
	}
	return 0
}

func (m *WebAppIconInfo) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *WebAppIconInfo) GetPurpose() WebAppIconInfo_Purpose {
	if m != nil && m.Purpose != nil {
		return *m.Purpose
	}
	return WebAppIconInfo_UNSPECIFIED
}

// WebApp data. This is a synced part of
// chrome/browser/web_applications/proto/web_app.proto data.
type WebAppSpecifics struct {
	StartUrl        *string                          `protobuf:"bytes,1,opt,name=start_url,json=startUrl" json:"start_url,omitempty"`
	Name            *string                          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	UserDisplayMode *WebAppSpecifics_UserDisplayMode `protobuf:"varint,3,opt,name=user_display_mode,json=userDisplayMode,enum=sync_pb.WebAppSpecifics_UserDisplayMode" json:"user_display_mode,omitempty"`
	ThemeColor      *uint32                          `protobuf:"varint,4,opt,name=theme_color,json=themeColor" json:"theme_color,omitempty"`
	Scope           *string                          `protobuf:"bytes,5,opt,name=scope" json:"scope,omitempty"`
	IconInfos       []*WebAppIconInfo                `protobuf:"bytes,6,rep,name=icon_infos,json=iconInfos" json:"icon_infos,omitempty"`
	// Used to store the page number that the app is displayed on in
	// chrome://apps.
	UserPageOrdinal *string `protobuf:"bytes,7,opt,name=user_page_ordinal,json=userPageOrdinal" json:"user_page_ordinal,omitempty"`
	// Used to store the in-page ranking for ordering apps in its given
	// |user_page_ordinal| page.
	UserLaunchOrdinal *string `protobuf:"bytes,8,opt,name=user_launch_ordinal,json=userLaunchOrdinal" json:"user_launch_ordinal,omitempty"`
	// Used to store id specified in the manifest.
	ManifestId           *string  `protobuf:"bytes,9,opt,name=manifest_id,json=manifestId" json:"manifest_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebAppSpecifics) Reset()         { *m = WebAppSpecifics{} }
func (m *WebAppSpecifics) String() string { return proto.CompactTextString(m) }
func (*WebAppSpecifics) ProtoMessage()    {}
func (*WebAppSpecifics) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_app_specifics_9ebf2fc6b24d2846, []int{1}
}
func (m *WebAppSpecifics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebAppSpecifics.Unmarshal(m, b)
}
func (m *WebAppSpecifics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebAppSpecifics.Marshal(b, m, deterministic)
}
func (dst *WebAppSpecifics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebAppSpecifics.Merge(dst, src)
}
func (m *WebAppSpecifics) XXX_Size() int {
	return xxx_messageInfo_WebAppSpecifics.Size(m)
}
func (m *WebAppSpecifics) XXX_DiscardUnknown() {
	xxx_messageInfo_WebAppSpecifics.DiscardUnknown(m)
}

var xxx_messageInfo_WebAppSpecifics proto.InternalMessageInfo

func (m *WebAppSpecifics) GetStartUrl() string {
	if m != nil && m.StartUrl != nil {
		return *m.StartUrl
	}
	return ""
}

func (m *WebAppSpecifics) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *WebAppSpecifics) GetUserDisplayMode() WebAppSpecifics_UserDisplayMode {
	if m != nil && m.UserDisplayMode != nil {
		return *m.UserDisplayMode
	}
	return WebAppSpecifics_UNSPECIFIED
}

func (m *WebAppSpecifics) GetThemeColor() uint32 {
	if m != nil && m.ThemeColor != nil {
		return *m.ThemeColor
	}
	return 0
}

func (m *WebAppSpecifics) GetScope() string {
	if m != nil && m.Scope != nil {
		return *m.Scope
	}
	return ""
}

func (m *WebAppSpecifics) GetIconInfos() []*WebAppIconInfo {
	if m != nil {
		return m.IconInfos
	}
	return nil
}

func (m *WebAppSpecifics) GetUserPageOrdinal() string {
	if m != nil && m.UserPageOrdinal != nil {
		return *m.UserPageOrdinal
	}
	return ""
}

func (m *WebAppSpecifics) GetUserLaunchOrdinal() string {
	if m != nil && m.UserLaunchOrdinal != nil {
		return *m.UserLaunchOrdinal
	}
	return ""
}

func (m *WebAppSpecifics) GetManifestId() string {
	if m != nil && m.ManifestId != nil {
		return *m.ManifestId
	}
	return ""
}

func init() {
	proto.RegisterType((*WebAppIconInfo)(nil), "sync_pb.WebAppIconInfo")
	proto.RegisterType((*WebAppSpecifics)(nil), "sync_pb.WebAppSpecifics")
	proto.RegisterEnum("sync_pb.WebAppIconInfo_Purpose", WebAppIconInfo_Purpose_name, WebAppIconInfo_Purpose_value)
	proto.RegisterEnum("sync_pb.WebAppSpecifics_UserDisplayMode", WebAppSpecifics_UserDisplayMode_name, WebAppSpecifics_UserDisplayMode_value)
}

func init() {
	proto.RegisterFile("components/sync/protocol/web_app_specifics.proto", fileDescriptor_web_app_specifics_9ebf2fc6b24d2846)
}

var fileDescriptor_web_app_specifics_9ebf2fc6b24d2846 = []byte{
	// 488 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x61, 0x8b, 0xd3, 0x30,
	0x18, 0xc7, 0xed, 0xf5, 0xce, 0x6e, 0xcf, 0xf4, 0x56, 0xa3, 0x60, 0x41, 0xe1, 0xc6, 0x40, 0x28,
	0x0a, 0x9d, 0xdc, 0x0b, 0xc1, 0x57, 0xd2, 0x6d, 0x95, 0x2b, 0x6e, 0xeb, 0xe8, 0x6e, 0x1c, 0xbe,
	0x0a, 0x5d, 0x9a, 0x6d, 0x81, 0x36, 0x09, 0x49, 0x8b, 0x77, 0x7e, 0x38, 0xdf, 0xf9, 0xbd, 0xa4,
	0xd9, 0x7a, 0x72, 0x27, 0xbe, 0x7b, 0xfa, 0xcb, 0xaf, 0x4f, 0x9e, 0x7f, 0x12, 0xf8, 0x48, 0x44,
	0x29, 0x05, 0xa7, 0xbc, 0xd2, 0x23, 0x7d, 0xc7, 0xc9, 0x48, 0x2a, 0x51, 0x09, 0x22, 0x8a, 0xd1,
	0x0f, 0xba, 0xc1, 0x99, 0x94, 0x58, 0x4b, 0x4a, 0xd8, 0x96, 0x11, 0x1d, 0x98, 0x25, 0xe4, 0x34,
	0x1a, 0x96, 0x9b, 0xe1, 0x2f, 0x0b, 0xce, 0x6f, 0xe8, 0x26, 0x94, 0x32, 0x26, 0x82, 0xc7, 0x7c,
	0x2b, 0xd0, 0x5b, 0x00, 0xcd, 0x7e, 0x52, 0xcc, 0x38, 0x96, 0xb7, 0x9e, 0x35, 0xb0, 0xfc, 0xb3,
	0xb4, 0xd3, 0x90, 0x98, 0x2f, 0x6f, 0x91, 0x0b, 0x76, 0xad, 0x0a, 0xef, 0x64, 0x60, 0xf9, 0xdd,
	0xb4, 0x29, 0xd1, 0x67, 0x70, 0x64, 0xad, 0xa4, 0xd0, 0xd4, 0xb3, 0x07, 0x96, 0x7f, 0x7e, 0x79,
	0x11, 0x1c, 0xbb, 0x07, 0x0f, 0x3b, 0x07, 0xcb, 0x83, 0x96, 0xb6, 0xfe, 0x30, 0x04, 0xe7, 0xc8,
	0x50, 0x1f, 0x7a, 0xeb, 0xc5, 0x6a, 0x19, 0x4d, 0xe2, 0xaf, 0x71, 0x34, 0x75, 0x9f, 0x20, 0x07,
	0xec, 0x70, 0xf1, 0xdd, 0xb5, 0xd0, 0x33, 0xe8, 0xcc, 0xc3, 0xd5, 0xb7, 0x70, 0x3c, 0x8b, 0xdc,
	0x13, 0x74, 0x0e, 0x30, 0x4f, 0x16, 0xc9, 0xe4, 0x2a, 0x4d, 0xe6, 0x91, 0x6b, 0x0f, 0x7f, 0xdb,
	0xd0, 0x3f, 0x6c, 0xb3, 0x6a, 0x33, 0xa2, 0x37, 0xd0, 0xd5, 0x55, 0xa6, 0x2a, 0xdc, 0x4c, 0x6a,
	0x99, 0x49, 0x3b, 0x06, 0xac, 0x55, 0x81, 0x10, 0x9c, 0xf2, 0xac, 0xa4, 0xc7, 0x04, 0xa6, 0x46,
	0xd7, 0xf0, 0xa2, 0xd6, 0x54, 0xe1, 0x9c, 0x69, 0x59, 0x64, 0x77, 0xb8, 0x14, 0x79, 0x1b, 0xc6,
	0x7f, 0x14, 0xe6, 0x7e, 0x97, 0x60, 0xad, 0xa9, 0x9a, 0x1e, 0x7e, 0x98, 0x8b, 0x9c, 0xa6, 0xfd,
	0xfa, 0x21, 0x40, 0x17, 0xd0, 0xab, 0xf6, 0xb4, 0xa4, 0x98, 0x88, 0x42, 0x28, 0xef, 0x74, 0x60,
	0xf9, 0xcf, 0x53, 0x30, 0x68, 0xd2, 0x10, 0xf4, 0x0a, 0xce, 0x34, 0x11, 0x92, 0x7a, 0x67, 0x66,
	0x96, 0xc3, 0x07, 0xfa, 0x04, 0xc0, 0x88, 0xe0, 0x98, 0xf1, 0xad, 0xd0, 0xde, 0xd3, 0x81, 0xed,
	0xf7, 0x2e, 0x5f, 0xff, 0xe7, 0x48, 0xd3, 0x2e, 0x3b, 0x56, 0x1a, 0xbd, 0x3f, 0x86, 0x90, 0xd9,
	0x8e, 0x62, 0xa1, 0x72, 0xc6, 0xb3, 0xc2, 0x73, 0x4c, 0x67, 0x33, 0xda, 0x32, 0xdb, 0xd1, 0xe4,
	0x80, 0x51, 0x00, 0x2f, 0x8d, 0x5b, 0x64, 0x35, 0x27, 0xfb, 0x7b, 0xbb, 0x63, 0x6c, 0xd3, 0x66,
	0x66, 0x56, 0x5a, 0xff, 0x02, 0x7a, 0x65, 0xc6, 0xd9, 0x96, 0xea, 0x0a, 0xb3, 0xdc, 0xeb, 0x1a,
	0x0f, 0x5a, 0x14, 0xe7, 0xc3, 0x2f, 0xd0, 0x7f, 0x74, 0x1e, 0xff, 0xde, 0x68, 0x0f, 0x9c, 0x71,
	0x9a, 0xdc, 0xac, 0xa2, 0xd4, 0xb5, 0x9a, 0x7b, 0x5c, 0x5d, 0x87, 0x8b, 0x69, 0x38, 0x4b, 0x16,
	0x91, 0x6b, 0x8f, 0x3f, 0xc0, 0x3b, 0xa1, 0x76, 0x01, 0xd9, 0x2b, 0x51, 0xb2, 0xba, 0x0c, 0xfe,
	0x3e, 0x69, 0x13, 0x3d, 0x68, 0x9f, 0xf4, 0x95, 0xbd, 0xb4, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xaf, 0xf7, 0x15, 0xfd, 0xf1, 0x02, 0x00, 0x00,
}
