// Code generated by protoc-gen-go. DO NOT EDIT.
// source: components/sync/protocol/favicon_image_specifics.proto

package sync_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FaviconData struct {
	// The image data for the favicon (PNG encoded).
	Favicon []byte `protobuf:"bytes,1,opt,name=favicon" json:"favicon,omitempty"`
	// The favicon dimensions.
	Width                *int32   `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height               *int32   `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaviconData) Reset()         { *m = FaviconData{} }
func (m *FaviconData) String() string { return proto.CompactTextString(m) }
func (*FaviconData) ProtoMessage()    {}
func (*FaviconData) Descriptor() ([]byte, []int) {
	return fileDescriptor_favicon_image_specifics_04fa45a1f23b37a1, []int{0}
}
func (m *FaviconData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaviconData.Unmarshal(m, b)
}
func (m *FaviconData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaviconData.Marshal(b, m, deterministic)
}
func (dst *FaviconData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaviconData.Merge(dst, src)
}
func (m *FaviconData) XXX_Size() int {
	return xxx_messageInfo_FaviconData.Size(m)
}
func (m *FaviconData) XXX_DiscardUnknown() {
	xxx_messageInfo_FaviconData.DiscardUnknown(m)
}

var xxx_messageInfo_FaviconData proto.InternalMessageInfo

func (m *FaviconData) GetFavicon() []byte {
	if m != nil {
		return m.Favicon
	}
	return nil
}

func (m *FaviconData) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *FaviconData) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

// Image data for favicons. Multiple resolutions are supported.
type FaviconImageSpecifics struct {
	// The url of the favicon image.
	FaviconUrl *string `protobuf:"bytes,1,opt,name=favicon_url,json=faviconUrl" json:"favicon_url,omitempty"`
	// A normal low-resolution web favicon (max resolution 16x16).
	FaviconWeb *FaviconData `protobuf:"bytes,2,opt,name=favicon_web,json=faviconWeb" json:"favicon_web,omitempty"`
	// A slightly higher-resolution web favicon (max resolution 32x32).
	FaviconWeb_32 *FaviconData `protobuf:"bytes,3,opt,name=favicon_web_32,json=faviconWeb32" json:"favicon_web_32,omitempty"`
	// A high-resolution touch favicon (not precomposed, max resolution 64x64).
	FaviconTouch_64 *FaviconData `protobuf:"bytes,4,opt,name=favicon_touch_64,json=faviconTouch64" json:"favicon_touch_64,omitempty"`
	// A high-resolution touch favicon (precomposed, max resolution 64x64).
	FaviconTouchPrecomposed_64 *FaviconData `protobuf:"bytes,5,opt,name=favicon_touch_precomposed_64,json=faviconTouchPrecomposed64" json:"favicon_touch_precomposed_64,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}     `json:"-"`
	XXX_unrecognized           []byte       `json:"-"`
	XXX_sizecache              int32        `json:"-"`
}

func (m *FaviconImageSpecifics) Reset()         { *m = FaviconImageSpecifics{} }
func (m *FaviconImageSpecifics) String() string { return proto.CompactTextString(m) }
func (*FaviconImageSpecifics) ProtoMessage()    {}
func (*FaviconImageSpecifics) Descriptor() ([]byte, []int) {
	return fileDescriptor_favicon_image_specifics_04fa45a1f23b37a1, []int{1}
}
func (m *FaviconImageSpecifics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaviconImageSpecifics.Unmarshal(m, b)
}
func (m *FaviconImageSpecifics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaviconImageSpecifics.Marshal(b, m, deterministic)
}
func (dst *FaviconImageSpecifics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaviconImageSpecifics.Merge(dst, src)
}
func (m *FaviconImageSpecifics) XXX_Size() int {
	return xxx_messageInfo_FaviconImageSpecifics.Size(m)
}
func (m *FaviconImageSpecifics) XXX_DiscardUnknown() {
	xxx_messageInfo_FaviconImageSpecifics.DiscardUnknown(m)
}

var xxx_messageInfo_FaviconImageSpecifics proto.InternalMessageInfo

func (m *FaviconImageSpecifics) GetFaviconUrl() string {
	if m != nil && m.FaviconUrl != nil {
		return *m.FaviconUrl
	}
	return ""
}

func (m *FaviconImageSpecifics) GetFaviconWeb() *FaviconData {
	if m != nil {
		return m.FaviconWeb
	}
	return nil
}

func (m *FaviconImageSpecifics) GetFaviconWeb_32() *FaviconData {
	if m != nil {
		return m.FaviconWeb_32
	}
	return nil
}

func (m *FaviconImageSpecifics) GetFaviconTouch_64() *FaviconData {
	if m != nil {
		return m.FaviconTouch_64
	}
	return nil
}

func (m *FaviconImageSpecifics) GetFaviconTouchPrecomposed_64() *FaviconData {
	if m != nil {
		return m.FaviconTouchPrecomposed_64
	}
	return nil
}

func init() {
	proto.RegisterType((*FaviconData)(nil), "sync_pb.FaviconData")
	proto.RegisterType((*FaviconImageSpecifics)(nil), "sync_pb.FaviconImageSpecifics")
}

func init() {
	proto.RegisterFile("components/sync/protocol/favicon_image_specifics.proto", fileDescriptor_favicon_image_specifics_04fa45a1f23b37a1)
}

var fileDescriptor_favicon_image_specifics_04fa45a1f23b37a1 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x14, 0x84, 0x49, 0x6b, 0x2c, 0xbe, 0x14, 0x91, 0xa5, 0x4a, 0x04, 0xc1, 0x52, 0x10, 0x0a, 0xc2,
	0x06, 0xd2, 0x98, 0x83, 0x07, 0x0f, 0x22, 0xa2, 0xb7, 0x12, 0x0d, 0x1e, 0x43, 0xb2, 0xdd, 0x26,
	0x0b, 0x49, 0x36, 0x6c, 0x36, 0x16, 0xff, 0x9e, 0xbf, 0x4c, 0xb2, 0xcd, 0x9a, 0x78, 0xb0, 0xc7,
	0xf7, 0x98, 0x6f, 0x66, 0x60, 0xc0, 0x27, 0xbc, 0xa8, 0x78, 0x49, 0x4b, 0x59, 0x3b, 0xf5, 0x57,
	0x49, 0x9c, 0x4a, 0x70, 0xc9, 0x09, 0xcf, 0x9d, 0x6d, 0xfc, 0xc9, 0x08, 0x2f, 0x23, 0x56, 0xc4,
	0x29, 0x8d, 0xea, 0x8a, 0x12, 0xb6, 0x65, 0xa4, 0xc6, 0x4a, 0x80, 0x26, 0xad, 0x38, 0xaa, 0x92,
	0x45, 0x08, 0xd6, 0xf3, 0x5e, 0xf9, 0x14, 0xcb, 0x18, 0xd9, 0x30, 0xe9, 0x40, 0xdb, 0x98, 0x1b,
	0xcb, 0x69, 0xa0, 0x4f, 0x34, 0x03, 0x73, 0xc7, 0x36, 0x32, 0xb3, 0x47, 0x73, 0x63, 0x69, 0x06,
	0xfb, 0x03, 0x5d, 0xc0, 0x71, 0x46, 0x59, 0x9a, 0x49, 0x7b, 0xac, 0xde, 0xdd, 0xb5, 0xf8, 0x1e,
	0xc1, 0x79, 0xe7, 0xfb, 0xda, 0x16, 0x78, 0xd3, 0xf9, 0xe8, 0x1a, 0x2c, 0x5d, 0xad, 0x11, 0xb9,
	0x4a, 0x39, 0x09, 0xa0, 0x7b, 0x85, 0x22, 0x47, 0x77, 0xbd, 0x60, 0x47, 0x13, 0x15, 0x67, 0xb9,
	0x33, 0xdc, 0x15, 0xc6, 0x83, 0xb6, 0xbf, 0xd8, 0x07, 0x4d, 0xd0, 0x3d, 0x9c, 0x0e, 0xb0, 0x68,
	0xe5, 0xaa, 0x46, 0xff, 0x91, 0xd3, 0x9e, 0x5c, 0xb9, 0xe8, 0x01, 0xce, 0x34, 0x2b, 0x79, 0x43,
	0xb2, 0xc8, 0xf7, 0xec, 0xa3, 0x03, 0xb4, 0x4e, 0x7a, 0x6f, 0xc5, 0xbe, 0x87, 0x42, 0xb8, 0xfa,
	0xcb, 0x57, 0x82, 0xaa, 0x61, 0x6a, 0xba, 0x69, 0xbd, 0xcc, 0x03, 0x5e, 0x97, 0x43, 0xaf, 0x75,
	0xcf, 0xf9, 0xde, 0xe3, 0x2d, 0xdc, 0x70, 0x91, 0x62, 0x92, 0x09, 0x5e, 0xb0, 0xa6, 0xc0, 0xfd,
	0xd6, 0xca, 0x09, 0xeb, 0xad, 0x5f, 0xc6, 0x6b, 0xe3, 0x27, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x9b,
	0x5a, 0x9e, 0x0a, 0x02, 0x00, 0x00,
}
